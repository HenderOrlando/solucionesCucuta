<?php

namespace SolucionesCucuta\AppBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EtiquetaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EtiquetaRepository extends EntityRepository
{
    public function getEtiquetasTipo($tipo, $results = true){
        $qb = $this->createQueryBuilder('e');
        if(is_numeric($tipo)){
            $qb->andWhere($qb->expr()->eq('e.tipo',$tipo));
        }elseif(is_string($tipo)){
            $qb ->join('e.tipo', 'et')
                ->andWhere($qb->expr()->eq('et.slug',$qb->expr()->literal($tipo)));
        }
        if($results === null){
            return $qb;
        }
        if(!$results){
            return $qb->getQuery();
        }
        return $qb->getQuery()->getResult();
    }


    public function searchEtiqueta($query, $results = true){
        $qb = $this->createQueryBuilder('e');
        $querySlug = $this->slugify($query);
        if(is_string($query)){
            $qb
                ->andWhere(
                    $qb->expr()->like('e.slug',$qb->expr()->literal('%'.$querySlug.'%')). 'OR '.
                    $qb->expr()->like('e.descripcion',$qb->expr()->literal('%'.$query.'%')). 'OR '.
                    $qb->expr()->like('e.descripcion',$qb->expr()->literal('%'.$querySlug.'%'))
                )
            ;
        }
        else{
            return null;
        }
        if($results === null){
            return $qb;
        }
        if(!$results){
            return $qb->getQuery();
        }
        return $qb->getQuery()->getResult();
    }

    public function searchEtiquetasTipo($query, $tipo){
        $querySlug = $this->slugify($query);
        $qb = $this->searchEtiqueta($query, null);
        $result = array();
        if($qb){
            $qb ->join('e.tipo', 'et')
                ->andWhere($qb->expr()->eq('et.slug',$qb->expr()->literal($tipo)))
            ;
            $result = $qb->getQuery()->getResult();
        }
        return $result;
    }
    public function slugify($text)
    {
        // replace non letter or digits by -
        $text = preg_replace('~[^\\pL\d]+~u', '-', $text);

        // trim
        $text = trim($text, '-');

        // transliterate
        $text = iconv('utf-8', 'us-ascii//TRANSLIT', $text);

        // lowercase
        $text = strtolower($text);

        // remove unwanted characters
        $text = preg_replace('~[^-\w]+~', '', $text);

        if (empty($text))
        {
            return 'n-a';
        }

        return $text;
    }
}
